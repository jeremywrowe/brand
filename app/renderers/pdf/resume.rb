require 'prawn'
require 'prawn/table'

ICONS = {
  'fas fa-at' => "\uf0e0",
  'fab fa-github' => "\uf09b",
  'fab fa-linkedin' => "\uf08c",
  'fab fa-twitter' => "\uf099"
}

module Pdf
  class Resume
    include Prawn::View

    include Helpers::Fonts
    include Helpers::Image

    def initialize(resume_content)
      @resume_content = resume_content
    end

    def render
      generate_content
      document.render
    end

    def render_file(path)
      generate_content
      document.render_file(path)
    end

    private

    def generate_content
      setup_fonts
      
      repeat(:all) do
        draw_text 'Generated by https://github.com/jeremywrowe/brand', at: [0, 10]
      end
      
      define_grid(columns: 7, rows: 16, gutter: 1)
      grid.show_all

      email_contact = @resume_content.contact_locations.select(&:email?).first
      contact_locations = @resume_content.contact_locations.reject(&:email?)
      service_offset = 3

      avatar = @resume_content.avatar
      grid([0, 0], [2, 2]).bounding_box do
        if contents = download_image(url: avatar.url)
          save_graphics_state do
            image_width = bounds.width - 150
            fill_color '209CEE'
            fill_circle [image_width / 2, bounds.height - image_width / 2], 3 + image_width / 2
            soft_mask do
              fill_color 0, 0, 0, 0
              fill_circle [image_width / 2, bounds.height - image_width / 2], image_width / 2
            end
            image contents, width: image_width, height: image_width
          end
        end
      end

      grid([0.5, 1.3], [2, 2]).bounding_box do
        text avatar.name, style: :bold
        avatar.blurbs.each do |blurb|
          text blurb
        end
      end

      if email_contact
        grid([0.5, service_offset], [0.5, service_offset]).bounding_box do
          render_icon(email_contact, :Fa)
        end
        service_offset += 1
      end

      contact_locations.each_with_index do |contact, index|
        offset = index + service_offset
        grid([0.5, offset], [0.5, offset]).bounding_box do
          render_icon(contact, :FaBrands)
        end
      end

      move_down 60
      text @resume_content.bio
      
      move_down 60
      text 'Experience', font_size: 14, style: :bold
      move_down 10
      
      experiences = @resume_content.experiences
      data = experiences.map { |ex| [ex.company, ex.title, ex.duration, ex.description] }
      table([['Company', 'Title', 'Duration', 'Description'], *data], header: true, row_colors: ['F5F5F5', 'FFFFFF']) do
        cells.borders = []
        style row(0), size: 10, font_style: :bold
        style rows(1..-1), size: 10
        style column(0), padding_left: 0
        style column(-1), padding_right: 0
      end
    end

    def render_icon(contact, font_face)
      text contact.heading, align: :center, size: 10
      font(font_face) do
        text(
          "<link href='#{contact.link}'>#{ICONS[contact.icon]}</link>",
          size: 30,
          inline_format: true,
          color: '3273DC',
          align: :center
        )
      end
    end
  end
end